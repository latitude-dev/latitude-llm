name: Tests

on:
  pull_request:
    branches:
      - main
  workflow_call:
    inputs:
      workflow_call:
        type: boolean
        required: false
        default: false

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
        python-version: [3.13.x]

    services:
      redis:
        image: redis
        ports:
          - '6379:6379'
      postgres:
        image: postgres
        env:
          POSTGRES_DB: latitude_test
          POSTGRES_PASSWORD: secret
          POSTGRES_USER: latitude
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpixman-1-dev libcairo2-dev

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: '0.5.10'
          enable-cache: true

      - name: Install Node.js dependencies
        run: pnpm install

      # TODO: We should probably separate node from python jobs
      - name: Install Python dependencies
        run: |
          cd packages/sdks/python
          uv venv
          uv sync --all-extras --all-groups

      - name: Use Turbo to build affected packages
        run: pnpm turbo build --cache-dir=.turbo --filter="./packages/**"

      - name: Wait for PostgreSQL to start
        run: until pg_isready -h localhost -p 5432; do sleep 1; done

      - name: Run Server migrations
        env:
          NODE_ENV: test
          DATABASE_URL: postgres://latitude:secret@localhost:5432/latitude_test
        run: cd packages/core && pnpm db:migrate:test

      - name: Node.js Test
        env:
          NODE_ENV: test
        run: pnpm test

      - name: Python Test
        run: |
          cd packages/sdks/python
          uv run scripts/test.py
