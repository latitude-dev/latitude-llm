global:
  image:
    registry: ghcr.io/latitude-dev
    tag: latest
    pullPolicy: IfNotPresent
    pullSecrets: [] # e.g. [my-ghcr-secret]

  sharedStorage:
    enabled: false

ingress:
  enabled: true
  className: '' # e.g. nginx
  annotations: {}
  tls:
    enabled: false
    secretName: '' # provide a secret with a cert covering the hosts
  hosts:
    web: app-latitude.example.com
    gateway: gateway-latitude.example.com
    websockets: ws-latitude.example.com

service:
  web:
    type: ClusterIP
    port: 8080
  gateway:
    type: ClusterIP
    port: 8080
  websockets:
    type: ClusterIP
    port: 4002

web:
  replicaCount: 2
  resources: {}

gateway:
  replicaCount: 2
  resources: {}

workers:
  replicaCount: 1
  resources: {}

websockets:
  replicaCount: 2
  resources: {}

migrations:
  enabled: true
  backoffLimit: 1

# Non-sensitive environment variables (ConfigMap)
env:
  NODE_ENV: 'production'
  # Database (non-sensitive display only; credentials/URL go in secretEnv)
  POSTGRES_USER: 'latitude'

  # Redis/Queue
  QUEUE_PORT: '6379'
  QUEUE_HOST: 'redis'
  CACHE_PORT: '6379'
  CACHE_HOST: 'redis'

  # Gateway Configuration
  GATEWAY_BIND_ADDRESS: '0.0.0.0'
  GATEWAY_BIND_PORT: '8787'
  GATEWAY_HOSTNAME: 'gateway'
  GATEWAY_PORT: '8080'
  GATEWAY_SSL: 'false'

  # Networking
  APP_DOMAIN: ''
  APP_URL: '' # if empty, defaults to scheme://<web host>
  NEXT_PUBLIC_DOCS_URL: ''

  # Traefik (not used on k8s, kept for parity)
  TRAEFIK_HOST: ''

  # Websockets
  WEBSOCKETS_SERVER: '' # if empty, defaults to internal service URL
  WEBSOCKETS_SERVER_PORT: '4002'
  WEBSOCKET_REFRESH_SECRET_TOKEN_KEY: 'websocket-refresh-secret-token'
  WEBSOCKET_SECRET_TOKEN_KEY: 'websocket-secret-token'

  # Email Configuration
  MAIL_TRANSPORT: 'mailpit'
  FROM_MAILER_EMAIL: 'hello@latitude.localhost'
  MAILGUN_EMAIL_DOMAIN: 'latitude.localhost'
  MAILGUN_HOST: 'api.eu.mailgun.net'
  MAILGUN_PROTOCOL: 'https'
  SMTP_PORT: '465'
  SMTP_SECURE: 'true'

  # Sentry (public DSN optional)
  NEXT_PUBLIC_SENTRY_DSN: ''

  # File storage
  DRIVE_DISK: 'local' # options: local, s3
  FILE_STORAGE_ROOT_PATH: '/app/storage/files'
  FILE_PUBLIC_PATH: 'files'
  FILES_STORAGE_PATH: '/app/storage/files'
  PUBLIC_FILES_STORAGE_PATH: '/app/apps/web/public/files'

  # Analytics (optional)
  NEXT_PUBLIC_POSTHOG_KEY: ''
  NEXT_PUBLIC_POSTHOG_HOST: ''

  # Google OAuth
  GOOGLE_CLIENT_ID: ''
  GOOGLE_REDIRECT_URI: '' # if empty, defaults to APP_URL + "/api/auth/google/callback"

# Sensitive environment variables (Secret)
secretEnv:
  POSTGRES_PASSWORD: ''
  DATABASE_URL: ''
  CACHE_PASSWORD: ''
  TRAEFIK_ACME_EMAIL: ''
  TRAEFIK_ADMIN_PASS: ''
  MAILGUN_MAILER_API_KEY: ''
  SMTP_HOST: ''
  SMTP_USER: ''
  SMTP_PASS: ''
  SENTRY_AUTH_TOKEN: ''
  SENTRY_DSN: ''
  SENTRY_ORG: ''
  SENTRY_PROJECT: ''
  AWS_REGION: ''
  AWS_ACCESS_KEY: ''
  AWS_ACCESS_SECRET: ''
  PUBLIC_S3_BUCKET: ''
  S3_BUCKET: ''
  GOOGLE_CLIENT_SECRET: ''
  NEXT_SERVER_ACTIONS_ENCRYPTION_KEY: ''
  DEFAULT_PROVIDER_API_KEY: ''
