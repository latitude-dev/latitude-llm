version: '3.9'

services:
  db:
    image: postgres:15.8
    restart: always
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - '6379:6379'

  mailpit:
    image: axllent/mailpit:latest
    restart: always
    ports:
      - '8025:8025'
      - '1025:1025'

  # Local build services - build from source instead of using pre-built images
  web:
    build:
      context: .
      dockerfile: apps/web/docker/Dockerfile
      args:
        PROJECT: '@latitude-data/web'
        PROJECT_PATH: 'apps/web'
        # Add any required build args here - they can be overridden in .env
        NEXT_PUBLIC_DOCS_URL: ${NEXT_PUBLIC_DOCS_URL:-}
        NEXT_PUBLIC_DATADOG_APPLICATION_ID: ${NEXT_PUBLIC_DATADOG_APPLICATION_ID:-}
        NEXT_PUBLIC_DATADOG_CLIENT_TOKEN: ${NEXT_PUBLIC_DATADOG_CLIENT_TOKEN:-}
        NEXT_PUBLIC_DATADOG_SITE: ${NEXT_PUBLIC_DATADOG_SITE:-}
        AWS_REGION: ${AWS_REGION:-}
        S3_BUCKET: ${S3_BUCKET:-}
        BUILD_ID: ${BUILD_ID:-}
    restart: on-failure
    env_file:
      - .env
    ports:
      - '3000:8080'
    volumes:
      - shared-storage:/app/storage/files
      - shared-storage:/app/apps/web/public/files
    depends_on:
      - db
      - redis

  gateway:
    build:
      context: .
      dockerfile: apps/gateway/docker/Dockerfile
      args:
        PROJECT: '@latitude-data/gateway'
        PROJECT_PATH: 'apps/gateway'
    restart: on-failure
    env_file:
      - .env
    ports:
      - '8787:8787'
    volumes:
      - shared-storage:/app/storage/files
      - shared-storage:/app/apps/web/public/files
    depends_on:
      - db
      - redis

  workers:
    build:
      context: .
      dockerfile: apps/workers/docker/Dockerfile
      args:
        PROJECT: '@latitude-data/workers'
        PROJECT_PATH: 'apps/workers'
    restart: on-failure
    env_file:
      - .env
    volumes:
      - shared-storage:/app/storage/files
      - shared-storage:/app/apps/web/public/files
    depends_on:
      - db
      - redis

  websockets:
    build:
      context: .
      dockerfile: apps/websockets/docker/Dockerfile
      args:
        PROJECT: '@latitude-data/websockets-server'
        PROJECT_PATH: 'apps/websockets'
    restart: on-failure
    env_file:
      - .env
    ports:
      - '4002:4002'
    volumes:
      - shared-storage:/app/storage/files
      - shared-storage:/app/apps/web/public/files
    depends_on:
      - db
      - redis

  migrations:
    build:
      context: .
      dockerfile: packages/core/docker/Dockerfile
      args:
        PROJECT: '@latitude-data/core'
        PROJECT_PATH: 'packages/core'
    env_file:
      - .env
    volumes:
      - shared-storage:/app/storage/files
      - shared-storage:/app/apps/web/public/files
    depends_on:
      - db
    command: ['pnpm', '--filter', '@latitude-data/core', 'db:migrate']

volumes:
  db-data:
  shared-storage:
